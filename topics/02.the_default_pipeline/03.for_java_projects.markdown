---
layout: topic
title:  "For Java Projects"
---
We support Java projects that build using Maven, Gradle or Ant. By default Snap will create a single stage pipeline with the default command of the build tool. For example, for Maven projects Snap will run the `mvn` command.

##Setting the Java version
You will presented with a Java version selector while setting up your project. Also we detect and honor the Java version specified in a `system.properties` file configured using Heroku's [java.runtime.version](https://devcenter.heroku.com/articles/customizing-the-jdk#specify-a-jdk-version)

##Connecting to a database
Snap follows Heroku's convention of injecting a `DATABASE_URL` environment variable into each stage's execution environment. For example, if you select Postgresql as your database, each stage will be injected with `DATABASE_URL=postgres://go:go@localhost:5432/app_test`. The format of `DATABASE_URL` is as follows, `[database type]://[username]:[password]@[host]:[port]/[database name]`.

The Heroku dev center article [Connecting to Relational Databases on Heroku with Java](https://devcenter.heroku.com/articles/connecting-to-relational-databases-on-heroku-with-java) lists several examples of using `DATABASE_URL` with popular frameworks such as Spring, Play! and plain JDBC.

##Build artifacts
Snap can be configured to propagate a build artifact through the pipeline. Additionally you may download this artifact on pipeline completion. For example, for Maven projects you can export the `target` directory as an artifact of your first stage. See our documentation on {% topic_link "Build artifacts" "build artifacts" %} for details.
