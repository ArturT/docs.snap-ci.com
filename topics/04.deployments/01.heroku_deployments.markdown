---
layout: topic
title:  "Deploying to Heroku"
---

Snap has first-class support for deploying Ruby and Rails and Java applications directly to Heroku. Upon a successful build, we'll deploy the application to Heroku if your deployment is configured to do automatic deploys, or you may deploy any particular build at a later time.

<h2>
  Setting up a Heroku deployment
  <a class="anchor" href="#settting-up-a-heroku-deployment">
     <i class="icon icon-link"></i>
   </a>
</h2>

* Visit the configuration page for your project and click the **Edit** link.
* Click **Add New** to add a new stage to your build.
* The **Heroku Deployment Stage** is disabled as you don't have a heroku account authorized with Snap.
  <p>![Heroku OAuth](/assets/images/screenshots/heroku-oauth-start.png)</p>
* Click **Please sign in using Heroku to continue** to authorize Snap to access your Heroku information.
* Click **Allow Access** to complete the authorization of Snap with Heroku.
  <p>![Heroku OAuth authorize](/assets/images/screenshots/heroku-oauth-authorize.png)</p>
* Once you've authorized Snap with heroku:
  * You can select an app to deploy to from the drop-down.
    <p>![Heroku list apps](/assets/images/screenshots/heroku-list-apps.png)</p>
  * Or you can choose to create an new a new app.
    <p>![Heroku create app](/assets/images/screenshots/heroku-create-app.png)</p>
* Click **save** to save this Heroku deployment configuration.

## Setting up subsequent deployments

Once you've authorized Snap with Heroku, setting up subsequent deployments becomes straight-forward as Snap reuses the credentials you used to setup your first deployment.
<p>![Heroku subsequent deployments](/assets/images/screenshots/heroku-subsequent-deployments.png)</p>

## Heroku configuration variables

You can optionally setup heroku configuration variables from Snap by navigating to the **Heroku Config Variables** tab when editing/creating a heroku deployment.
![Heroku configuration variables](/assets/images/screenshots/heroku-deployment-config-vars.png)

## Database migrations

After pushing new code, you may want to run the rails `db:migrate` task. This can be done by checking the **Perform db migration** checkbox.

## Backup and maintenance mode

Before pushing new code and performing any migrations, it is recommended that you put your Heroku app in maintenance mode. This can be done by additional stages before and after the Heroku Deployment Stage.

### See also

* [Heroku maintenance mode documentationn](https://devcenter.heroku.com/articles/maintenance-mode)
* [Heroku PostgreSQL backup](https://devcenter.heroku.com/articles/pgbackups)
