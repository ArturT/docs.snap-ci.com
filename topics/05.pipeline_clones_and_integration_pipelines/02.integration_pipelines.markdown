---
layout: topic
title:  "Integration pipelines"
---

Integration pipelines provide additional information for builds which track pipelines that are intended to be merged into a target branch (master) at some point in their lifecycle. Typically these are short lived feature branches or bug fix branches which are meant to merge quickly into a master branch. While this feature is best used in conjunction with the {% topic_link "Automatically tracking branches on Github" 'automatic branch tracking' %} feature, it is available when setting up any branch build using the {% topic_link "Cloning a pipeline" 'clone functionality' %}.

## Setting up an integration pipeline when creating a clone

When setting up a clone, in addition to the branch you wish the clone to build against, you can also select a branch that the work is intended to be merged into. This will set up an integration pipeline which will be triggered on successful completion of the primary pipeline. The integration pipeline is triggered with the branch changes merged with the HEAD of the integration target branch.

![integrated clone setup](/assets/images/screenshots/clones/clone-dialog.png)

Note: Keep in mind that the integration pipeline will be triggered after the last stage of the branch pipeline as it was originally configured. You can always add stages after that stage on the branch pipeline, but the integration pipeline will still trigger at the end of the stage that originally terminated the branch pipeline.

## Integrated clones, running

While the integration pipeline runs, or if either pipeline fails, the build history page shows both pipelines expanded.

![integration pipelines running](/assets/images/screenshots/clones/integration-running.png)

When a pipeline run on passes, the two pipelines collapse to conserve space. You can see the information about either pipeline by switching between the tracking-pipeline & integration-pipeline tabs.

![successful integration run](/assets/images/screenshots/clones/integration-successful.png)