---
layout: topic
title:  "Setup Tasks"
---

When you set up your build on Snap, you will usually have some tasks that are common to most stages. Typically these tasks will setup the right environment required for your any stage to run. Common examples include installing your build dependencies, setting up the database, etc. Instead of re-writing these tasks before every stage, Snap allows you to extract such tasks out in something we call *Setup Tasks*.

<br/>
> **A Setup Task is a command that is runs before every stage.**

<br/>

A rails project may typically include 2 setup tasks:

    $ bundle install --path $HOME/.bundle
    $ bundle exec rake db:create db:migrate db:test:prepare

You can create Setup Tasks when you create a project or by editing the project configuration. To add a Setup Task,
edit an existing stage or click on ADD NEW stage.

{% image screenshots/setup-tasks/add-new-stage.png %}

Then click on Add Setup Task.

{% image screenshots/setup-tasks/edit-stage.png %}

Add your Setup Task and hit Ok.

{% image screenshots/setup-tasks/add-setup-task.png %}

## Speeding up your setup tasks

One of the most common use-case for setup tasks is to install your build
dependencies. Every project has its own home directory. You can speed the
process of installation by installing them in the home directory. As you can
see in the above example we added a setup task that does a `bundle install
--path $HOME/.bundle`.  Snap makes a best attempt to keep the home directory
around across your stage and build runs. So if you configure your setup task to
install your build tools in the home directory, your subsequent stages and
pipelines can re-use it.
